<?xml version="1.0" encoding="UTF-8"?>
<ctl:package
 xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
 xmlns:ctl="http://www.occamlab.com/ctl"
 xmlns:parsers="http://www.occamlab.com/te/parsers"
 xmlns:p="http://teamengine.sourceforge.net/parsers"
 xmlns:saxon="http://saxon.sf.net/"
 xmlns:csw="http://www.opengis.net/cat/csw/2.0.2"
 xmlns:ows="http://www.opengis.net/ows"
 xmlns:dc="http://purl.org/dc/elements/1.1/" 
 xmlns:dct="http://purl.org/dc/terms/" 
 xmlns:xlink="http://www.w3.org/1999/xlink" 
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xsd="http://www.w3.org/2001/XMLSchema">

  <xi:include href="common.xml"/>
  <xi:include href="preconditions.xml"/>
  <xi:include href="GetCapabilities/CSW-GetCapabilities-GET.xml"/>
  <xi:include href="DescribeRecord/CSW-DescribeRecord-POST.xml"/>
  <xi:include href="GetRecordById/CSW-GetRecordById-GET.xml"/>
  <xi:include href="GetRecords/CSW-GetRecords-POST.xml"/>

  <ctl:suite name="csw:csw-2.0.2-compliance-suite-auto">
    <ctl:title>CSW 2.0.2 Compliance Test Suite</ctl:title>
    <ctl:description>
       Verifies a CSW 2.0.2 catalogue implementation against all applicable 
       abstract test suites. No specific CSW application profile is presumed.
       These tests are intended to be incorporated into profile-specific test 
       suites.
    </ctl:description>
    <ctl:link>data/csw-2.0.2-data.zip</ctl:link>
    <ctl:link>docs/csw/2.0.2/</ctl:link>
    <ctl:starting-test>csw:Main-auto</ctl:starting-test>
  </ctl:suite>

  <ctl:test name="csw:Main-auto">
    <ctl:param name="capabilities.url"/>
    <ctl:assertion>The implementation under test minimally conforms to the CSW 
      part (Clause 10) of Catalogue 2.0.2 (OGC 07-006r1).</ctl:assertion>
    <ctl:code>
      <xsl:variable name="csw.capabilities.doc">
        <ctl:request>
          <ctl:url>
            <xsl:value-of select="$capabilities.url"/>
          </ctl:url>
          <ctl:method>GET</ctl:method>
        </ctl:request>
      </xsl:variable>

      <xsl:choose>
        <xsl:when test="not($csw.capabilities.doc/csw:Capabilities)">
          <ctl:message>[FAILURE] Did not obtain a csw:Capabilities document! Skipping remaining tests.</ctl:message>	
          <ctl:fail/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:variable name="SmokeTest.result">
            <ctl:call-test name="csw:Preconditions">
              <ctl:with-param name="csw.capabilities.doc" select="$csw.capabilities.doc"/>
            </ctl:call-test>
          </xsl:variable>
          <xsl:if test="not($SmokeTest.result/*)">
            <ctl:call-test name="csw:GetCapabilities-GET">
              <ctl:with-param name="csw.capabilities.doc" select="$csw.capabilities.doc"/>
            </ctl:call-test>
            <ctl:call-test name="csw:DescribeRecord-POST">
              <ctl:with-param name="csw.capabilities.doc" select="$csw.capabilities.doc"/>
            </ctl:call-test>
            <ctl:call-test name="csw:GetRecordById-GET">
              <ctl:with-param name="csw.capabilities.doc" select="$csw.capabilities.doc"/>
            </ctl:call-test>
            <ctl:call-test name="csw:GetRecords-POST">
              <ctl:with-param name="csw.capabilities.doc" select="$csw.capabilities.doc"/>
            </ctl:call-test>
          </xsl:if>
        </xsl:otherwise>
      </xsl:choose>
    </ctl:code>
  </ctl:test>

	<ctl:test name="csw:Preconditions" isConformanceClass="true" isBasic="true">
    <ctl:param name="csw.capabilities.doc" />
    <ctl:assertion>Confirm that the IUT is ready to undergo testing.
    </ctl:assertion>
    <ctl:comment>
      Check all of the following conditions:
      (1) the service is available;
      (2) the capabilities document is valid;
      (3) test data have been loaded.
      If any of these checks fail, the test run is aborted.
    </ctl:comment>
    <ctl:code>
      <ctl:call-test name="ctl:SchematronValidatingParser">
        <ctl:comment>Check that the capabilities document is valid against
          the schema.
        </ctl:comment>
        <ctl:with-param name="doc" select="$csw.capabilities.doc" />
        <ctl:with-param name="schema">/sch/csw/2.0.2/Capabilities.sch</ctl:with-param>
        <ctl:with-param name="phase">RequiredElementsPhase</ctl:with-param>
      </ctl:call-test>
      <ctl:call-test name="csw:GeneralCapabilities">
        <ctl:with-param name="csw.capabilities.doc" select="$csw.capabilities.doc" />
      </ctl:call-test>
    </ctl:code>
  </ctl:test>


</ctl:package>
